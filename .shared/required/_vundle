set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim' " package manager
Plugin 'bling/vim-airline' " status bar
Plugin 'vim-airline/vim-airline-themes' " colors for status bar
Plugin 'tpope/vim-surround' " manipulate surround chars
Plugin 'frazrepo/vim-rainbow' " color pairing brakets and such
Plugin 'ctrlpvim/ctrlp.vim' " fuzzy file finder
Plugin 'jremmen/vim-ripgrep' " grepper
Plugin 'stefandtw/quickfix-reflector.vim' " editable quickfix list for ripgrep
Plugin 'tpope/vim-fugitive' " git plugin
Plugin 'neoclide/coc.nvim', {'branch': 'release'} " intellisense

" Plugin 'edkolev/tmuxline.vim' " prettier tmux
" Plugin 'itchyny/lightline.vim' " status bar
" Plugin 'airblade/vim-gitgutter' " git supporting plugin
" Plugin 'OrangeT/vim-csharp'
" Plugin 'chaoren/vim-wordmotion'
" Plugin 'scrooloose/nerdtree' " filesystem explorer

call vundle#end()
filetype plugin indent on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ

" leader key
let mapleader = " "

" vundle vim-fugitive remaps
nmap <leader>gj :diffget //3<CR>
nmap <leader>gf :diffget //2<CR>
nmap <leader>gs :diffput<CR>
vmap <leader>gs :diffput<CR>
" brings up git status. gi'get information'
nmap <leader>gi :G<CR>

" vundle coc
" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
let g:coc_global_extensions=['coc-powershell', 'coc-json', 'coc-pyright', 'coc-sql', 'coc-tsserver', 'coc-css', 'coc-html']

" vim-gitgutter settings
" let g:gitgutter_git_executable = 'C:/Program Files/Git/bin/git.exe'

" vim-airline/vim-airline-themes settings
let g:airline_theme='zenburn'

" ctrlp
" Ignore files in .gitignore
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
" show hidden files in search results
let g:ctrlp_show_hidden = 1

" wordmotion
" let g:wordmotion_prefix = ','

" ripgrep
nmap <leader>fi :Rg -i 
nmap <leader>fa :Rg -i --hidden 

" quickfix-reflector
" makes quick fix list editable
let g:qf_modifiable = 1

" so ~/vim-plugin-settings/coc.vim

