# vim: set filetype=bash :

get-commits-for-today PROJECT_DIRECTORY_GLOB="$HOME/projects/*/":
  #!/usr/bin/env bash
  # set -euxo pipefail
  after_day=`pwsh -command '& {$today=Get-Date; $month=(Get-Culture).DateTimeFormat.GetAbbreviatedMonthName($today.Month); "$month$($today.Day-1)"}'`;
  before_day=`pwsh -command '& {$today=Get-Date; $month=(Get-Culture).DateTimeFormat.GetAbbreviatedMonthName($today.Month); "$month$($today.Day+1)"}'`;
  for project in {{PROJECT_DIRECTORY_GLOB}};
   do
    cd "$project";
    git pull;
    echo "";
    echo "------------ BEGIN PROJECT --------------";
    pwd;
    git --no-pager log --all --after="$after_day" --before="$before_day" --stat;
    echo "------------ END PROJECT --------------";
    echo "";
    cd ..;
  done;

decompile-dlls-and-exes FOLDER_TO_DECOMPILE OUTPUT_FOLDER_IN_WINDOWS_ABSOLUTE_PATH_STYLE:
  #!/usr/bin/env bash
  # set -euxo pipefail
  find "{{FOLDER_TO_DECOMPILE}}" -regextype egrep -iregex ".*\.(dll|exe)" -type f -print0 | while read -d $'\0' file; do
    win_file=`realpath "$file" | sed -E "s,^/(\w)/,\U\1:/,g"`;
    d=`basename "$file" | sed -E 's,(\S+)\.(dll|exe),\1_\2,'`;
    cmd.exe "/c JustDecompile.exe /out:{{OUTPUT_FOLDER_IN_WINDOWS_ABSOLUTE_PATH_STYLE}}/$d /target:$win_file";
    echo "Done with $win_file";
  done;

get-type-info-for-cs FOLDER_WITH_DECOMPILED_CONTENT OUTPUT_FOLDER:
  #!/usr/bin/env bash
  # set -euxo pipefail
  find "{{FOLDER_WITH_DECOMPILED_CONTENT}}" -regextype egrep -iregex ".*(dll|exe)" -type d -print0 | while read -d $'\0' folder; do
    abs_folder_name=`realpath "$folder"`;
    base_folder_name=`basename "$folder"`;
    find "$abs_folder_name" -regextype egrep -iregex ".*\.cs" -type f -not -path '*/.git/*' -not -path '*/.svn/*' -not -path '*/node_modules/*' -not -path '*/.venv/*' -exec egrep --color -in -e "\b(public|class|enum|get|set|interface)\b" "{}" + | tee "{{OUTPUT_FOLDER}}/${base_folder_name}.txt";
  done;

