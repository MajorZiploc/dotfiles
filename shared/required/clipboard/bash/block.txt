# Search files for phrase find/egrep
find . -maxdepth 9 -regextype egrep -iregex ".*" -type f
-not -path '*/__pycache__/*'
-not -path '*/bin/*'
-not -path '*/obj/*'
-not -path '*/.git/*'
-not -path '*/.svn/*'
-not -path '*/node_modules/*'
-not -path '*/.ionide/*'
-not -path '*/.venv/*'
-exec egrep --color -in -e "$(echo "pattern1|pattern2" | to_fuzz)" {} +
<:>
# for loop
IFS= ;
l=(1 2 3 '4');
for ele in ${l[@]};
  do echo $ele hi;
done;
unset IFS;
# IFS= is for null character delimited
<:>
# search for block and print first line of the block in quick fix list format only if it exists in the file
gfind_in_files "-exec bash -c 'source ~/.bashrc.d/portable/functions_vim.bash; show_block \"function\" \"function\" \"{}\" | head -n 3 | tr -d \"\n\"; echo \"\";' \;" | grep -Ev "^[^:]+:::$"
# search for block and print filename
gfind_files ".*" "-exec bash -c 'source ~/.bashrc.d/portable/functions_vim.bash; show_block \"function\" \"function\" \"{}\" | head -n 3 | tr -d \"\n\"; echo \"\";' \;" | grep -Ev "^[^:]+:::$" | sed -E 's,([^:]+).*,\1,g'
<:>
# merge 2 jsons
# NOTE: if json values have a single quote in them, then you need to run this on the jsons before this: sed -E 's,'"(')"',\1"\1"\1,g'
#  OR: make the json files manually
json1='
{
  "x": [1],
  "y": 2
}
';
json2='
{
  "x": [2],
  "y": 2
}
';
echo "$json1" | sed -E 's,\\,\\\\,g' > /tmp/json1.json;
echo "$json2" | sed -E 's,\\,\\\\,g' > /tmp/json2.json;
jq -s '.[0] * .[1]' /tmp/json1.json /tmp/json2.json;
