so ~/.vim/rc-settings/common.vim

" inoremap kj <esc>
" imap kj <esc>
" imap <tab> <esc>
imap <c-l> <esc>
imap <c-[> <esc>
" imap 1` <esc>
" imap `1 <esc>

" control-keys for select all, undo, save, cut, copy, paste, quit
nnoremap <c-a> ggVG
nnoremap <c-s> :w<cr>
inoremap <c-s> <esc>:w<cr>a
nnoremap <c-z> u
vnoremap <c-x> "+d
vnoremap <c-c> "+y
nnoremap <c-v> "+p
vnoremap <c-v> "+p
inoremap <c-v> <esc>"+pa
" nnoremap <c-j> <c-d>
" vnoremap <c-j> <c-d>
" nnoremap <c-k> <c-u>
" vnoremap <c-k> <c-u>

" normal mode whitespace
" nnoremap <cr> o<esc>
" nnoremap <s-cr> O<esc>

" nnoremap <tab> >>
" nnoremap <s-tab> <<
" vnoremap <tab> >
" vnoremap <s-tab> <
" inoremap <tab> <c-t>
" inoremap <s-tab> <c-d>

set scrolloff=8
set incsearch

" clear search highlight with Backspace
nnoremap <silent> <bs> :noh<cr>

nmap <leader><leader>s :vsc Tools.InvokeAceJumpCommand<cr>

nmap gi :vsc Edit.GoToImplementation<cr>
nmap gr :vsc Edit.FindAllReferences<cr>
nmap gq :vsc Edit.QuickInfo<cr>
nmap <c-w><c-i> :vsc Edit.QuickInfo<cr>
vmap gf :vsc Edit.FormatSelection<cr>
nmap gf :vsc Edit.FormatDocument<cr>

nmap <leader>gd :vsc Edit.GoToDefinition<cr>
nmap <leader>gi :vsc Edit.GoToImplementation<cr>
nmap <leader>gr :vsc Edit.FindAllReferences<cr>
nmap <leader>wi :vsc Edit.QuickInfo<cr>
nmap <leader>gq :vsc Edit.QuickInfo<cr>
vmap <leader>gf :vsc Edit.FormatSelection<cr>
nmap <leader>gf :vsc Edit.FormatDocument<cr>

nmap <leader>ws :vsc Window.NewVerticalTabGroup<cr>
" switching between tab groups
nnoremap <c-w><c-h> <c-w>h
nnoremap <c-w><c-l> <c-w>l
nnoremap <c-w><c-j> <c-w>j
" nnoremap <c-w><c-k> <c-w>k "has problem with <c-k> when using vscode preset
nnoremap <c-w><c-s> :split<cr>
nnoremap <c-w><c-v> :vsplit<cr>
nmap <c-w><c-q> :vsc Window.CloseDocumentWindow<cr>
nmap <leader>wH :vsc Window.MovetoPreviousTabGroup<cr>
nmap <leader>wL :vsc Window.MovetoNextTabGroup<cr>
nmap <leader>h :vsc View.NavigateBackward<cr>
nmap <leader>l :vsc View.NavigateForward<cr>
nmap <leader>q :vsc Edit.QuickInfo<cr>
nmap <leader>e :vsc View.NextError<cr>
nmap <leader>E :vsc View.PreviousError<cr>
nmap <leader>d :vsc ReSharper.ReSharper_GoToDeclaration<cr>
nmap <leader>i :vsc ReSharper.ReSharper_GotoImplementations<cr>
nmap <leader>u :vsc ReSharper.ReSharper_FindUsages<cr>
nmap <leader>r :vsc EditorContextMenus.CodeWindow.Refactor.RefactorRename

" backup mappings for <esc>
" inoremap kj <esc>
" imap kj <esc>
" imap <tab> <esc>
imap <c-l> <esc>
imap <c-[> <esc>
" imap 1` <esc>
" imap `1 <esc>

" Reselect visual selection after indenting
vnoremap < <gv
vnoremap > >gv

" repeat dot command on a visual selection
xmap <silent> . :normal .<cr>

" repeat macro command on a visual selection
function! ExecuteMacroOverVisualRange()
  echo "@".getcmdline()
  execute ":'<,'>normal @" . nr2char(getchar())
endfunction
xnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>

" save all dirty buffers
nmap <c-s> :wa<cr>

function WriteIfPossibleThenQuitBuffer()
  :w
  :q!
endfunction
" save and quite
nmap <leader>wq :call WriteIfPossibleThenQuitBuffer()<cr>
